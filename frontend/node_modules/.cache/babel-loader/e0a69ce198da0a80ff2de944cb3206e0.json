{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\FullStack_CL32\\\\project\\\\frontend\\\\src\\\\screens\\\\auth\\\\Register.js\";\nimport React, { useState } from \"react\";\nimport { Container, Card, Form, Button, Alert } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nconst validationSchema = yup.object().shape({\n  username: yup.string().min(6, \"Username's length must be greater than 6!\").required(\"Username is required!\"),\n  password: yup.string().min(6, \"Password's length must be greater than 6!\").required(\"Password is required!\"),\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\"), \"\"], \"Confirm password not matched\").required(\"Confirm password is required!\")\n});\nexport const Register = () => {\n  const [registering, setRegistering] = useState(false);\n  const [isSuccess, setSuccess] = useState(false);\n  const [isError, setError] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      setRegistering(true);\n      axios.post(\"http://localhost:5000/auth/register\", {\n        username: values.username,\n        password: values.password\n      }).then(() => {\n        setSuccess(true);\n        setError(false);\n      }).catch(() => {\n        setError(true);\n        setSuccess(false);\n      }).finally(() => {\n        setRegistering(false);\n      });\n    }\n  });\n  const {\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    touched,\n    errors\n  } = formik;\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, !registering && isSuccess ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Registered Successfully!\") : null, !registering && isError ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Something went wrong!\") : null, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Please fill out the form to create an account ....\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter username\",\n    name: \"username\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.username && errors.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, errors.username)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.password && errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, errors.password)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formConfirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"confirmPassword\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.confirmPassword && errors.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, errors.confirmPassword)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    disabled: registering,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, registering ? \"Registering ...\" : \"Register\")))));\n};","map":{"version":3,"sources":["C:/Users/Asus/FullStack_CL32/project/frontend/src/screens/auth/Register.js"],"names":["React","useState","Container","Card","Form","Button","Alert","useFormik","yup","axios","validationSchema","object","shape","username","string","min","required","password","confirmPassword","oneOf","ref","Register","registering","setRegistering","isSuccess","setSuccess","isError","setError","formik","initialValues","onSubmit","values","post","then","catch","finally","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Card, Form, Button, Alert } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\n\nconst validationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .min(6, \"Username's length must be greater than 6!\")\n    .required(\"Username is required!\"),\n  password: yup\n    .string()\n    .min(6, \"Password's length must be greater than 6!\")\n    .required(\"Password is required!\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), \"\"], \"Confirm password not matched\")\n    .required(\"Confirm password is required!\"),\n});\n\nexport const Register = () => {\n  const [registering, setRegistering] = useState(false);\n  const [isSuccess, setSuccess] = useState(false);\n  const [isError, setError] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      setRegistering(true);\n      axios\n        .post(\"http://localhost:5000/auth/register\", {\n          username: values.username,\n          password: values.password,\n        })\n        .then(() => {\n          setSuccess(true);\n          setError(false);\n        })\n        .catch(() => {\n          setError(true);\n          setSuccess(false);\n        })\n        .finally(() => {\n          setRegistering(false);\n        });\n    },\n  });\n\n  const { handleSubmit, handleChange, handleBlur, touched, errors } = formik;\n\n  return (\n    <Container className=\"mt-5\">\n      <Card>\n        <Card.Header>Register</Card.Header>\n        <Card.Body>\n          {!registering && isSuccess ? (\n            <Alert variant=\"success\">Registered Successfully!</Alert>\n          ) : null}\n          {!registering && isError ? (\n            <Alert variant=\"danger\">Something went wrong!</Alert>\n          ) : null}\n          <Card.Title>\n            Please fill out the form to create an account ....\n          </Card.Title>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter username\"\n                name=\"username\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                isInvalid={touched.username && errors.username}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.username}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                isInvalid={touched.password && errors.password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formConfirmPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"confirmPassword\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                isInvalid={touched.confirmPassword && errors.confirmPassword}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.confirmPassword}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" disabled={registering}>\n              {registering ? \"Registering ...\" : \"Register\"}\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}