{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\FullStack_CL32\\\\project\\\\frontend\\\\src\\\\screens\\\\auth\\\\Login.js\";\nimport React, { useContext } from \"react\";\nimport { Container, Card, Form, Button } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthUserCtx } from \"../../context/authUser\";\nconst validationSchema = yup.object().shape({\n  username: yup.string().min(6, \"Username's length must be greater than 6!\").required(\"Username is required!\"),\n  password: yup.string().min(6, \"Password's length must be greater than 6!\").required(\"Password is required!\")\n});\nexport const Login = () => {\n  const {\n    setAuthUser\n  } = useContext(AuthUserCtx);\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      axios.post(\"http://localhost:5000/auth/login\", {\n        username: values.username,\n        password: values.password\n      }).then(res => {\n        setAuthUser(res.data.user);\n        localStorage.setItem(\"jwt\", res.data.jwt);\n      });\n    }\n  });\n  const {\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    errors,\n    touched\n  } = formik;\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Signing in ....\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter username\",\n    name: \"username\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.username && errors.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, errors.username)), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.password && errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, errors.password)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n};","map":{"version":3,"sources":["C:/Users/Asus/FullStack_CL32/project/frontend/src/screens/auth/Login.js"],"names":["React","useContext","Container","Card","Form","Button","useFormik","yup","axios","Redirect","AuthUserCtx","validationSchema","object","shape","username","string","min","required","password","Login","setAuthUser","formik","initialValues","onSubmit","values","post","then","res","data","user","localStorage","setItem","jwt","handleSubmit","handleBlur","handleChange","errors","touched"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Container, Card, Form, Button } from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { AuthUserCtx } from \"../../context/authUser\";\n\nconst validationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .min(6, \"Username's length must be greater than 6!\")\n    .required(\"Username is required!\"),\n  password: yup\n    .string()\n    .min(6, \"Password's length must be greater than 6!\")\n    .required(\"Password is required!\"),\n});\n\nexport const Login = () => {\n  const { setAuthUser } = useContext(AuthUserCtx);\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      axios\n        .post(\"http://localhost:5000/auth/login\", {\n          username: values.username,\n          password: values.password,\n        })\n        .then((res) => {\n          setAuthUser(res.data.user);\n          localStorage.setItem(\"jwt\", res.data.jwt);\n        });\n    },\n  });\n\n  const { handleSubmit, handleBlur, handleChange, errors, touched } = formik;\n\n  return (\n    <Container className=\"mt-5\">\n      <Card>\n        <Card.Header>Login</Card.Header>\n        <Card.Body>\n          <Card.Title>Signing in ....</Card.Title>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter username\"\n                name=\"username\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                isInvalid={touched.username && errors.username}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.username}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                isInvalid={touched.password && errors.password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.password}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Login\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}